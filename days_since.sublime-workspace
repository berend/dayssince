{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"ch",
				"check_pw  (function)"
			],
			[
				"make",
				"make_hash"
			],
			[
				"login",
				"loginuser"
			],
			[
				"us",
				"username"
			],
			[
				"user_",
				"user_password"
			],
			[
				"password",
				"password"
			],
			[
				"user",
				"user_id"
			],
			[
				"try",
				"try	Try/Except"
			],
			[
				"log",
				"log_messages"
			],
			[
				"re",
				"revnum"
			],
			[
				"lo",
				"log_messages"
			],
			[
				"templ",
				"template_values"
			],
			[
				"temp",
				"template_values"
			],
			[
				"B",
				"Blogentry"
			],
			[
				"en",
				"entry_id"
			],
			[
				"new",
				"new_entry_id"
			],
			[
				"au",
				"auto_now_add"
			],
			[
				"has",
				"hash_from_db"
			],
			[
				"mak",
				"make_salt"
			],
			[
				"link",
				"link_id"
			],
			[
				"email_error",
				"email_error_found"
			],
			[
				"E",
				"EMAIL_ERRORTEXT"
			],
			[
				"ver",
				"verify_error_found"
			],
			[
				"Ver",
				"VERIFY_ERRORTEXT"
			],
			[
				"pas",
				"password_error_found"
			],
			[
				"PAS",
				"PASSWORD_ERRORTEXT"
			],
			[
				"US",
				"USERNAME_ERRORTEXT"
			],
			[
				"ema",
				"email_error_found"
			],
			[
				"pass",
				"password_error_found"
			],
			[
				"EMA",
				"EMAIL_REGEX"
			],
			[
				"em",
				"email_error"
			],
			[
				"U",
				"USERNAME_REGEX"
			],
			[
				"text",
				"textarea"
			],
			[
				"val",
				"valid_month"
			],
			[
				"cap",
				"cap_month"
			],
			[
				"prim",
				"primelist"
			],
			[
				"in",
				"input	Tag"
			],
			[
				"pr",
				"primes"
			],
			[
				"prime",
				"primes"
			],
			[
				"squa",
				"squarelist_dict"
			],
			[
				"primes",
				"primelist"
			],
			[
				"squ",
				"squarelist"
			],
			[
				"hexa",
				"hexa_dict"
			],
			[
				"pe",
				"pent_dict"
			],
			[
				"wor",
				"word"
			],
			[
				"w",
				"word_value"
			],
			[
				"pa",
				"pan_origin"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "#!/usr/bin/env python\n#\n# Copyright 2007 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n\nimport os\nimport logging\nimport utils\nimport webapp2\n\nfrom utils import BaseHandler\nfrom google.appengine.api import memcache\nfrom google.appengine.ext import db\nfrom datetime import datetime\n# from time import strftime\n\n\nDEBUG = os.environ['SERVER_SOFTWARE'].startswith('Developement')\n\n\nclass FrontPage(BaseHandler):\n    def get(self):\n        self.render('frontpage.htm', {})\n\n\nclass AdminPage(BaseHandler):\n    def get(self):\n        q = db.GqlQuery(\"SELECT * from CustomAlarm ORDER BY created DESC\")\n        alarms = list(q)\n        template_values = {\"has_any_alarms\": len(alarms)>=1,\n                           \"alarms\": alarms}\n        self.render('admin.htm', template_values)\n\n\nclass AdminPage_old(BaseHandler):\n    def get(self):\n        logging.info(\"user_id: %s\" % self.user_id)\n        if self.user_id:\n            message = \"Leave empty to set to (now)\"\n            template_values = {\"message\": message}\n            self.render('reset.htm', template_values)\n        else:\n            self.redirect(\"/login\")\n\n    def post(self):\n        if self.user_id:\n            user_date = self.request.get('date')\n            user_time = self.request.get('time')\n\n            error_raised = None\n            if user_date == '' and user_time == '':\n                user_datetime = datetime.today()\n            else:\n                try:\n                    #dd.mm.yyyy hh:mm\n                    user_datetime = datetime.strptime(user_date + ' ' + user_time, '%d.%m.%Y %H:%M')\n\n                except ValueError:\n                    error_raised = True\n\n            if error_raised:\n                message = \"Error with date/time format\"\n                template_values = {'message': message}\n            else:\n                message = \"Last alarm set to %s\" % datetime.strftime(user_datetime, \"%a, %d %b %Y %H:%M:%S\")\n                template_values = {'message': message}\n\n                # all ok write to db, update cache\n                q = db.GqlQuery(\"SELECT * from Alarmtimestamp\")\n                q = list(q)\n                if len(q) < 1:\n                    new_alarm = Alarmtimestamp(alarm_datetime=user_datetime)\n                    new_alarm.put()\n                    memcache.set('alarm', [new_alarm])\n                else:\n                    existing_alarm = q[0]\n                    existing_alarm.alarm_datetime = user_datetime\n                    existing_alarm.put()\n                    memcache.set('alarm', [existing_alarm])\n                # update cache\n\n            self.render('reset.htm', template_values)\n        else:\n            self.redirect(\"/login\")\n\n\nclass NewPage(BaseHandler):\n    def get(self):\n        if self.user_id:\n            template_values = {\"isAvailable\": False}\n            self.render('new.htm', template_values)\n        else:\n            self.redirect(\"/login\")\n\n    def post(self):\n        if self.user_id:\n            user_availhash = self.request.get('availhash')\n            user_custompath = self.request.get('custompath')\n            alarms_exists = CustomAlarm.get_by_key_name('custompath')\n            if alarms_exists:\n                template_values = {\"message\": \"This url is already taken!\",\n                                   \"isAvailable\": False}\n                self.render('new.htm', template_values)\n            else:\n                # check availhash, if good\n                template_values = {\"message\": \"This url is free!\",\n                                   \"isAvailable\": True}\n        else:\n            self.redirect(\"/login\")\n\n\nclass NewUser(BaseHandler):\n    def get(self):\n        template_values = {\"submit_error\": False}\n        self.render('newuser.htm', template_values)\n\n    def post(self):\n        user_login = self.request.get('login')\n        user_yourname = self.request.get('yourname')\n        user_password = self.request.get('password')\n        user_password_repeat = self.request.get('password_repeat')\n        user_email = self.request.get('email')\n\n        if user_password != user_password_repeat:\n            template_values = {\"error_message\": \"Passwords don't match!\", \"submit_error\": True}\n            self.render('newuser.htm', template_values)\n        elif user_password == \"\":\n            template_values = {\"error_message\": \"Passwords are empty!\", \"submit_error\": True}\n            self.render('newuser.htm', template_values)\n        elif User.get_by_key_name(user_login):\n            template_values = {\"error_message\": \"Username is already taken!\", \"submit_error\": True}\n            self.render('newuser.htm', template_values)\n        else:\n            #no error, create new user!\n            pw_hash = utils.hash_pw_for_db(user_password)\n            user_cookie = utils.make_cookie(user_login)\n\n            new_user = User(key_name=user_login, yourname=user_yourname, password=pw_hash, email=user_email)\n            new_user.put()\n\n            #login new user by creating cookie and display sucess web page\n            self.response.headers.add_header('Set-Cookie', 'user_id=%s; Path=/' % str(user_cookie))\n            self.render('new_user_created.htm', {})\n\n\nclass CustomMainPage(BaseHandler):\n    def get(self, path):\n        template_values = {\"message\": \"CustomMainPage - GET handler for [%s]\" % path}\n        self.render('generic.htm', template_values)\n\n    def post(self, path):\n        user_custompath = self.request.get('custompath')\n        user_hidden_hash = self.request.get('availhash')\n\n        utils.check_custom_path_hash(user_custompath, user_hidden_hash)\n        template_values = {\"message\": \"CustomMainPage - POST handler for [%s]\" % path}\n        self.render('generic.htm', template_values)\n\n\nclass LoginPage(BaseHandler):\n    def get(self):\n        self.render('login.htm', {})\n\n    def post(self):\n        user_username = self.request.get('username')\n        user_password = self.request.get('password')\n        # logging.info(\"username: %s\" % user_username)\n        if user_username:\n            loginuser = User.get_by_key_name(user_username)\n\n        else:\n            loginuser = None\n\n        if loginuser:\n            hashed_pw = loginuser.password\n        else:\n            hashed_pw = \"\"\n\n        if not(loginuser) or not(utils.check_pw(hashed_pw, user_password)):\n            # username does not exist or wrong password\n            template_values = {\"message\": \"Wrong username or password false!\"}\n            self.render('login.htm', template_values)\n        else:\n            #login by cookie setting and redirecting to this users admin page\n            user_cookie = utils.make_cookie(user_username)\n            self.response.headers.add_header('Set-Cookie', 'user_id=%s; Path=/' % str(user_cookie))\n            self.redirect(\"/admin\")\n\n\nclass Alarmtimestamp(db.Model):\n    alarm_datetime = db.DateTimeProperty(required=True)\n    alarm_path = db.StringProperty(required=True)\n\n\nclass CustomAlarm(db.Model):\n    # custom path is the key for creating and referencing\n    alarm_custom_path = db.StringProperty(required=True)\n    alarm_name = db.StringProperty(required=True)\n    created = db.DateTimeProperty(auto_now_add = True)\n\n\nclass User(db.Model):\n    #user_login is the key, when creating and referencing users\n    yourname = db.StringProperty(required=True)\n    password = db.StringProperty(required=True)\n    email = db.StringProperty()\n    created = db.DateTimeProperty(auto_now_add = True)\n\napp = webapp2.WSGIApplication([('/', FrontPage),\n                               ('/new', NewPage),\n                               ('/newuser', NewUser),\n                               ('/admin', AdminPage),\n                               ('/login', LoginPage),\n                               ('/(.+)', CustomMainPage)\n                               ],\n                              debug=True)\n",
			"file": "main.py",
			"file_size": 8298,
			"file_write_time": 129960909297209546,
			"settings":
			{
				"buffer_size": 8342,
				"line_ending": "Windows"
			}
		},
		{
			"file": "templates/admin.htm",
			"settings":
			{
				"buffer_size": 615,
				"line_ending": "Windows"
			}
		},
		{
			"file": "templates/new.htm",
			"settings":
			{
				"buffer_size": 807,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "Packages/Python/Python.sublime-build",
	"command_palette":
	{
		"height": 392.0,
		"selected_items":
		[
			[
				"Pack",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Discover Packages"
			],
			[
				"",
				"Package Control: Install Package"
			]
		],
		"width": 536.0
	},
	"console":
	{
		"height": 230.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/C/git/days_since/dayssince/.gitignore",
		"/C/temp/dump.xml",
		"/C/temp/dumpb.xml",
		"/C/Program Files (x86)/FreeMind/Freemind.bat",
		"/C/Applications2/CampusNet/trunk_kopie/src/CampusNet/Source/Prg_3505.xml",
		"/C/temp/dumpb.txt",
		"/C/git/days_since/dayssince/templates/newuser.htm",
		"/C/git/days_since/dayssince/main.py",
		"/C/temp/dump.txt",
		"/C/git/days_since/dayssince/utils.py",
		"/C/git/days_since/dayssince/templates/new_user_created.htm",
		"/C/git/days_since/dayssince/templates/new.htm",
		"/C/git/days_since/dayssince/templates/frontpage.htm",
		"/C/git/days_since/dayssince/templates/login.htm",
		"/C/git/days_since/dayssince/templates/reset.htm",
		"/C/git/days_since/dayssince/templates/index.htm",
		"/C/git/days_since/dayssince/templates/generic.htm",
		"/C/Applications/CampusNet/trunk/src2/CampusNet/Source/Prg_3487.xml",
		"//Cn-dev/campusnet/www/scripts/crypto.dll",
		"/C/Applications/CampusNet/trunk/src2/CampusNet/Source/Prg_1949.xml",
		"/C/Applications/CampusNet/trunk/files/web/content/registration.htm",
		"/C/Applications/CampusNet/trunk/files/web/content/reg_exam_details.htm",
		"/C/git/days_since/dayssince/samples/inherit.py",
		"/C/Applications/CampusNet/trunk/src2/CampusNet/Source/Prg_1973.xml",
		"/C/Users/berend.kapelle/Dropbox/python/appengine/c253blog/handler.py",
		"/C/Users/berend.kapelle/Dropbox/python/appengine/c253blog/handler.pyc",
		"/C/Users/berend.kapelle/Dropbox/python/optimizer/optimus.py",
		"/C/Users/berend.kapelle/Dropbox/python/optimizer/optimizer_data.json",
		"/U/CampusNet/tmp347943558537139.csv",
		"/C/Applications/CampusNet/trunk/files/web/content/advisor_students.htm",
		"/C/Users/berend.kapelle/Desktop/studierendenstatus_noch__testen.txt",
		"/C/Applications/svn_old_versions.bat",
		"/C/Users/berend.kapelle/Dropbox/python/appengine/cs253wiki/handler.py",
		"/C/Users/berend.kapelle/Dropbox/python/svn_connect/svn2.py",
		"/C/Applications/svn_startup.bat",
		"/C/Users/berend.kapelle/Dropbox/python/svn_connect/svn.py",
		"/C/Users/berend.kapelle/AppData/Roaming/Sublime Text 2/Packages/Flake8Lint/Default (Windows).sublime-keymap",
		"/C/Users/berend.kapelle/AppData/Roaming/Sublime Text 2/Packages/Default/Default (Windows).sublime-keymap",
		"/C/Users/berend.kapelle/AppData/Roaming/Sublime Text 2/Packages/Flake8Lint/Flake8Lint.sublime-settings",
		"/C/Users/berend.kapelle/AppData/Roaming/Sublime Text 2/Packages/User/Flake8Lint.sublime-settings",
		"/C/Users/berend.kapelle/AppData/Roaming/Sublime Text 2/Packages/Package Control/Package Control.sublime-settings",
		"/C/Users/berend.kapelle/AppData/Roaming/Sublime Text 2/Packages/TrainlingSpaces/trailing_spaces.py",
		"//Cn-dev400/campusnet/tmpl/campus/001/show_registration_details.htm",
		"/C/Applications/CampusNet/4.00/local/logs/mgerror_bk.log",
		"/C/Users/berend.kapelle/AppData/Roaming/Sublime Text 2/Packages/TrainlingSpaces/Default.sublime-commands",
		"/C/Users/berend.kapelle/AppData/Roaming/Sublime Text 2/Packages/TrainlingSpaces/trailing_spaces.sublime-settings",
		"/C/Users/berend.kapelle/AppData/Roaming/Sublime Text 2/Packages/User/Preferences.sublime-settings",
		"/C/Users/berend.kapelle/AppData/Roaming/Sublime Text 2/Packages/Python/Python.tmLanguage",
		"/C/Users/berend.kapelle/AppData/Roaming/Sublime Text 2/Packages/Python/if-__name__-==-'__main__'.sublime-snippet",
		"/C/Users/berend.kapelle/AppData/Roaming/Sublime Text 2/Packages/User/Default (Windows).sublime-keymap",
		"/C/Applications/kill_update_restart.bat",
		"/C/temp/test.reg",
		"/C/xampp/htdocs/django/docs/ref/django-admin.txt",
		"/C/Applications/CampusNet/trunk/files/web/content/show_registration_details.htm",
		"/C/temp/appointments.xml",
		"/C/git/days_since/dayssince/README.markdown",
		"/C/Python/Python27/Lib/site-packages/django/bin/django-admin.py",
		"/C/xampp/apache/conf/httpd.conf",
		"/C/coding_wednesday/cw19/cwblog/index.yaml",
		"/C/coding_wednesday/cw19/cwblog/app.yaml",
		"/C/coding_wednesday/cw19/cwblog/main.py",
		"/C/coding_wednesday/cw19/cwblog/templates/frontpage.htm",
		"/C/coding_wednesday/cw19/cwblog/templates/entry.htm",
		"/C/coding_wednesday/cw19/cwblog/templates/newentry.htm",
		"/T/Transfer/codingwed/CW18 - Cloud Programming mit AppEngine/snippet1.py",
		"/T/Transfer/codingwed/CW18 - Cloud Programming mit AppEngine/snippet2.htm",
		"/C/coding_wednesday/cw19/cw19.sublime-project",
		"/C/Users/berend.kapelle/Dropbox/python/appengine/c253blog/login.py",
		"/C/Users/berend.kapelle/Dropbox/python/appengine/c253blog/welcome.py",
		"/C/Users/berend.kapelle/Dropbox/python/appengine/c253blog/main.py",
		"/C/Users/berend.kapelle/Dropbox/python/appengine/c253blog/templates/login.htm",
		"/C/Users/berend.kapelle/Dropbox/python/appengine/c253blog/signup.py",
		"/C/Users/Berend/Dropbox/python/diverses/test.py",
		"/C/Users/Berend/Dropbox/python/udacity/cs253_u5_11.py",
		"/C/Users/berend.kapelle/Dropbox/ahk_scripts/spotify_mute.ahk",
		"/C/Users/berend.kapelle/Dropbox/python/appengine/c253blog/csblog.sublime-project",
		"/C/Users/berend.kapelle/Desktop/Themen mit LKI",
		"/C/Applications/CampusNet/4.00/local/logs/peex_srpa_include_final_grade_fix.csv",
		"/C/Applications/CampusNet/4.00/local/logs/peex_srpa_include_final_grade_fix__.csv",
		"/C/Applications/CampusNet/4.00/local/logs/peex_srpa_include_final_grade_fix3.csv",
		"/C/Applications/CampusNet/trunk/local/logs/peex_srpa_include_final_grade_fix.csv",
		"/C/Applications/CampusNet/4.00/local/logs/peex_srpa_include_final_grade_fix2.csv",
		"/C/Applications/CampusNet/4.00/local/logs/peex_srpa_include_final_grade_fix7.csv",
		"/C/Applications/CampusNet/4.00/local/logs/peex_srpa_include_final_grade_fix8.csv",
		"/C/Applications/CampusNet/trunk/files/web/content/lostpass.htm",
		"/C/Applications/CampusNet/trunk/files/web/frame/master/head.htm",
		"/C/Users/berend.kapelle/AppData/Local/Temp/outlook logging/20120810-114127778-oof.log",
		"/C/Users/berend.kapelle/AppData/Local/Temp/outlook logging/berend.kapelle@datenlotsen.de.ost.log",
		"/C/Users/berend.kapelle/AppData/Local/Temp/outlook logging/20120810-114124959-oof.log",
		"/C/Users/berend.kapelle/Dropbox/python/diverses/google_doodle_hurdles.py",
		"/C/Users/berend.kapelle/Dropbox/python/appengine/helloworld/helloworld.py",
		"/C/Users/berend.kapelle/Dropbox/python/appengine/udacity01/helloworld.py",
		"/C/Users/berend.kapelle/Dropbox/python/udacity/c253_u3_13.py",
		"/C/Users/berend.kapelle/Dropbox/python/udacity/c253_u3_12.py",
		"/C/Users/berend.kapelle/Dropbox/python/udacity/c253_u3_05.py",
		"/C/Users/berend.kapelle/Dropbox/python/python101/mpe.py",
		"/C/Users/berend.kapelle/Dropbox/python/python101/euler.py",
		"/C/Python/Python27/NEWS.txt",
		"/C/Users/berend.kapelle/Dropbox/python/appengine/rot13/rot13/main.py",
		"/C/Users/berend.kapelle/Desktop/mitarbeiter_gespräch.txt",
		"//CN-DEV340/CampusNet/ini/user/berend.kapelle.ini",
		"//Cn-dev400/campusnet/ini/mgrb.ini",
		"/C/Users/berend.kapelle/Desktop/CW_termine.txt",
		"/C/Users/berend.kapelle/AppData/Local/Temp/Prg_9389.xm-rev33012.svn001.tmp.xml",
		"/C/Users/berend.kapelle/AppData/Local/Temp/Prg_4712.xm-rev32832.svn001.tmp.xml",
		"/C/Users/berend.kapelle/AppData/Local/Temp/Prg_5938.xm-rev32833.svn001.tmp.xml",
		"/C/Users/berend.kapelle/AppData/Local/Temp/Prg_2104.xm-rev32835.svn001.tmp.xml",
		"/C/Users/berend.kapelle/AppData/Local/Temp/Prg_2184.xm-rev32893.svn001.tmp.xml",
		"/C/Users/berend.kapelle/AppData/Local/Temp/Prg_9425.xm-rev32920.svn001.tmp.xml",
		"/C/Users/berend.kapelle/AppData/Local/Temp/Prg_62.xm-rev33009.svn001.tmp.xml",
		"/C/Users/berend.kapelle/AppData/Local/Temp/Prg_2112.xm-rev33010.svn001.tmp.xml",
		"/C/Users/berend.kapelle/AppData/Local/Temp/Prg_2209.xm-rev33011.svn001.tmp.xml",
		"/C/Users/berend.kapelle/AppData/Local/Temp/Prg_9390.xml-rev33013.svn000.tmp.xml",
		"/C/Users/berend.kapelle/AppData/Local/Temp/Prg_4309.xml-rev32831.svn000.tmp.xml",
		"/C/Users/berend.kapelle/AppData/Local/Temp/Prg_2206.xml-rev32830.svn000.tmp.xml",
		"/C/Users/berend.kapelle/AppData/Local/Temp/Prg_2135.xml-rev32829.svn000.tmp.xml",
		"/C/Users/berend.kapelle/AppData/Local/Temp/Prg_9676.xml-rev32795.svn000.tmp.xml",
		"/C/Users/berend.kapelle/AppData/Local/Temp/Prg_2211.xml-rev32794.svn000.tmp.xml",
		"/C/Users/berend.kapelle/AppData/Local/Temp/Prg_9448.xml-rev32783.svn000.tmp.xml",
		"/C/Users/berend.kapelle/AppData/Local/Temp/Prg_3891.xml-rev32719.svn000.tmp.xml",
		"/C/Users/berend.kapelle/AppData/Local/Temp/Prg_9524.xml-rev32718.svn000.tmp.xml",
		"/C/Users/berend.kapelle/AppData/Local/Temp/Prg_9524.xm-rev32694.svn001.tmp.xml",
		"/C/Users/berend.kapelle/AppData/Local/Temp/Prg_9736.xml-rev32651.svn000.tmp.xml",
		"/C/Users/berend.kapelle/AppData/Local/Temp/Prg_1942.-rev32566.svn003.tmp.xml",
		"/C/Users/berend.kapelle/AppData/Local/Temp/Prg_9448.xml-rev32547.svn000.tmp.xml",
		"/C/Users/berend.kapelle/AppData/Local/Temp/Prg_9703.xml-rev32494.svn000.tmp.xml",
		"/C/Users/berend.kapelle/AppData/Local/Temp/Prg_9389.xml-rev33012.svn000.tmp.xml",
		"/C/Users/berend.kapelle/AppData/Local/Temp/Prg_2209.xml-rev33011.svn000.tmp.xml"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"eclipse",
			"crypto",
			"MainHandler",
			"detectIndentation",
			"translateTabsToSpaces",
			"flake",
			"#",
			"console",
			"lostpass",
			"6 - KEDB SP4",
			"campus400",
			"idle",
			"[logginh",
			"'",
			"_a",
			"REQUISITE_NAME",
			"<div class=\"error\" title=\"",
			"No open application term",
			"<trans>Register",
			"Regiser",
			"<tns:bewertung_anzeige>nb</tns:bewertung_anzeige>",
			"val"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"8 - KEDB SP5",
			"campusUT",
			"''",
			"_b",
			"int"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "main.py",
					"settings":
					{
						"buffer_size": 8342,
						"regions":
						{
						},
						"selection":
						[
							[
								3622,
								3622
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 780.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "templates/admin.htm",
					"settings":
					{
						"buffer_size": 615,
						"regions":
						{
						},
						"selection":
						[
							[
								274,
								280
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "templates/new.htm",
					"settings":
					{
						"buffer_size": 807,
						"regions":
						{
						},
						"selection":
						[
							[
								445,
								456
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 247.0
	},
	"replace":
	{
		"height": 62.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"main",
				"main.py"
			],
			[
				"ma",
				"main.py"
			],
			[
				"log",
				"c253blog/login.py"
			],
			[
				"hand",
				"c253blog/handler.py"
			],
			[
				"",
				"c253blog/login.py"
			],
			[
				"lo",
				"c253blog/login.py"
			],
			[
				"handl",
				"handler.py"
			],
			[
				".htm",
				"/C/Users/berend.kapelle/Dropbox/python/appengine/c253blog/templates/login.htm"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
		],
		"width": 380.0
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 223.0,
	"status_bar_visible": true
}
